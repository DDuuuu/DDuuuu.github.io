<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>AndrewDu&#39;s blog</title>
    <link>https://DDuuuu.github.io/</link>
    <description>AndrewDu,Blog,C#,DotNet,.Net</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>978089234@qq.com (AndrewDu)</managingEditor>
      <webMaster>978089234@qq.com (AndrewDu)</webMaster><copyright>Copyright© Andrew.Du</copyright><lastBuildDate>Wed, 16 Nov 2022 17:09:22 &#43;0800</lastBuildDate>
      <atom:link href="https://DDuuuu.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
  <title>LeeCode-34-数组-查找第一个和最后一个位置</title>
  <link>https://DDuuuu.github.io/2022/11/leecode34/</link>
  <pubDate>Wed, 16 Nov 2022 17:09:22 &#43;0800</pubDate>
  <author>AndrewDu</author>
  <guid>https://DDuuuu.github.io/2022/11/leecode34/</guid>
  <description><![CDATA[题目 题目链接 给你一个按照非递减顺序排列的整数数组 nums，和一个目标值 target。请你找出给定目标值在数组中的开始位置和结束位置。 如果数组]]></description>
</item>
<item>
  <title>LeeCode-35-数组-搜索插入位置</title>
  <link>https://DDuuuu.github.io/2022/11/leecode35/</link>
  <pubDate>Tue, 15 Nov 2022 17:09:22 &#43;0800</pubDate>
  <author>AndrewDu</author>
  <guid>https://DDuuuu.github.io/2022/11/leecode35/</guid>
  <description><![CDATA[题目 题目链接 给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。 请必须使]]></description>
</item>
<item>
  <title>LeeCode-704-数组-二分查找</title>
  <link>https://DDuuuu.github.io/2022/11/leecode704/</link>
  <pubDate>Mon, 14 Nov 2022 17:09:22 &#43;0800</pubDate>
  <author>AndrewDu</author>
  <guid>https://DDuuuu.github.io/2022/11/leecode704/</guid>
  <description><![CDATA[题目 给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target ，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。 示例 1: 1]]></description>
</item>
<item>
  <title>DotNet基础 Socket</title>
  <link>https://DDuuuu.github.io/2022/10/dotnetbase1-socket/</link>
  <pubDate>Fri, 14 Oct 2022 17:09:22 &#43;0800</pubDate>
  <author>AndrewDu</author>
  <guid>https://DDuuuu.github.io/2022/10/dotnetbase1-socket/</guid>
  <description><![CDATA[概述 高性能的套接字编程围绕着两个方面：异步和复用。异步：高性能就是最大化计算机资源的利用，是不可能让线程有阻塞的，所以就有了各种异步模式。复]]></description>
</item>
<item>
  <title>TouchSocket 插件</title>
  <link>https://DDuuuu.github.io/2022/09/touchsocket7-plugs/</link>
  <pubDate>Sat, 17 Sep 2022 17:09:22 &#43;0800</pubDate>
  <author>AndrewDu</author>
  <guid>https://DDuuuu.github.io/2022/09/touchsocket7-plugs/</guid>
  <description><![CDATA[概述 注意：该版本为TouchSocket 0.3.5,最新版已有较大改动。 TouchSocket提供插件方式的扩展，这种方式对原框架的耦合较小]]></description>
</item>
<item>
  <title>TouchSocket Socket基础</title>
  <link>https://DDuuuu.github.io/2022/09/touchsocket6-socket/</link>
  <pubDate>Fri, 16 Sep 2022 17:09:22 &#43;0800</pubDate>
  <author>AndrewDu</author>
  <guid>https://DDuuuu.github.io/2022/09/touchsocket6-socket/</guid>
  <description><![CDATA[概述 注意：该版本为TouchSocket 0.3.5,最新版已有较大改动。 TouchSocket的底层使用完成端口模型，基于事件的异步模式。关]]></description>
</item>
<item>
  <title>TouchSocket 封装和扩展</title>
  <link>https://DDuuuu.github.io/2022/09/touchsocket5-encapsulationextension/</link>
  <pubDate>Thu, 15 Sep 2022 17:09:22 &#43;0800</pubDate>
  <author>AndrewDu</author>
  <guid>https://DDuuuu.github.io/2022/09/touchsocket5-encapsulationextension/</guid>
  <description><![CDATA[概述 注意：该版本为TouchSocket 0.3.5,最新版已有较大改动。 Socket模型中需要考虑对各种方法的封装，需要考虑对各种业务场景的]]></description>
</item>
<item>
  <title>TouchSocket 文件池</title>
  <link>https://DDuuuu.github.io/2022/09/touchsocket4-filepool/</link>
  <pubDate>Wed, 14 Sep 2022 17:09:22 &#43;0800</pubDate>
  <author>AndrewDu</author>
  <guid>https://DDuuuu.github.io/2022/09/touchsocket4-filepool/</guid>
  <description><![CDATA[概述 注意：该版本为TouchSocket 0.3.5,最新版已有较大改动。 读写文件是应用中必不可少的操作，也是比较经典的问题。该问题一般要求：]]></description>
</item>
<item>
  <title>TouchSocket 字节池和待处理池</title>
  <link>https://DDuuuu.github.io/2022/09/touchsocket3-bytespoolwaithandlepool/</link>
  <pubDate>Sat, 10 Sep 2022 17:09:22 &#43;0800</pubDate>
  <author>AndrewDu</author>
  <guid>https://DDuuuu.github.io/2022/09/touchsocket3-bytespoolwaithandlepool/</guid>
  <description><![CDATA[概述 注意：该版本为TouchSocket 0.3.5,最新版已有较大改动。 池是高性能组件中必不可少的东西，池最主要的功能是复用，在软件中创建和]]></description>
</item>
<item>
  <title>TouchSocket 依赖注入容器</title>
  <link>https://DDuuuu.github.io/2022/09/touchsocket2-dependencyinjection/</link>
  <pubDate>Fri, 09 Sep 2022 17:09:22 &#43;0800</pubDate>
  <author>AndrewDu</author>
  <guid>https://DDuuuu.github.io/2022/09/touchsocket2-dependencyinjection/</guid>
  <description><![CDATA[概述 注意：该版本为TouchSocket 0.3.5,最新版已有较大改动。 容器现在已经成为各种组件的标配了，为什么容器这么火，确实是太好用了。]]></description>
</item>
</channel>
</rss>
